/* 1) Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать чай (можно представить её в виде массива видов чая, которые хотят заказать).
Необходимо последовательно выводить в консоль сколько заплатит покупатель (необходимо вывести его номер по порядку, чай, который он заказал, и стоимость).
a) Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. Необходимо создать новый массив, который будет состоять из элементов старого, но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию.
b) Написать функцию, которая на вход принимает целое число, а возвращает массив, который сформирован по следующим правилам: количество элементов соответствует переданному числу, массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза. */

let teaPrices = ["черный": 100, "зеленый": 80, "фруктовый": 120] // Словарь с видами чая и их стоимостью
let peopleTeaOrders = ["черный", "зеленый", "фруктовый"] // Массив заказов людей
var orderNumber = 1
for teaOrder in peopleTeaOrders {
    if let price = teaPrices[teaOrder] {
        print("Покупатель №\(orderNumber): заказал \(teaOrder) чай за \(price) рублей")
        orderNumber += 1
    } else {
        print("Покупатель №\(orderNumber): \(teaOrder) чай отсутствует в меню")
        orderNumber += 1
    }
}

// Решение для нового массива без nil, 0 и 4, отсортированного по возрастанию:

let array = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
let filteredArray = array.compactMap { $0 }.filter { $0 != 0 && $0 != 4 }.sorted()
print(filteredArray)

// Функция для создания массива по заданным правилам:

func generateArray(count: Int) -> [Int] {
    var resultArray = [Int]()
    var currentValue = 1
    for _ in 1...count {
        resultArray.append(currentValue)
        currentValue *= 2
    }
    return resultArray
}
// Пример использования функции
let generatedArray = generateArray(count: 5)
print(generatedArray)
